---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: new-controller
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: new-controller-role
rules:
- apiGroups:
  - apps.newresource.com
  resources:
  - newresources
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - apps.newresource.com
  resources:
  - newresources/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - apps.newresource.com
  resources:
  - newresources/finalizers
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: new-controller-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: new-controller-role
subjects:
- kind: ServiceAccount
  name: new-controller
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: new-controller-leader-election-role
  namespace: default
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: new-controller-leader-election-rolebinding
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: new-controller-leader-election-role
subjects:
- kind: ServiceAccount
  name: new-controller
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: new-controller
  name: new-controller
spec:
  replicas: 3
  selector:
    matchLabels:
      app: new-controller
  strategy: {}
  template:
    metadata:
      labels:
        app: new-controller
    spec:
      serviceAccountName: new-controller
      containers:
      - image: new-controller:1.0.1
        name: new-controller
        command: ["/app/manager"]
        args: ["--leader-elect"]
        ports:
        - containerPort: 8080
          name: metrics
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
status: {}
